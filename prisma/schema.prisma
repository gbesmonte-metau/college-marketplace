// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  username String @unique
  password String
  location String? /// @encrypted
  formatted_address String? /// @encrypted
  icon String?
  bio String?
  createdPosts Post[] @relation("UserCreatedPosts")
  boughtPosts Post[] @relation("UserBoughtPosts")
  Post_UserLikedPosts Post[] @relation("UserLikedPosts")
  Post_UserSavedPosts Post[] @relation("UserSavedPosts")
}

model Post {
  id Int @id @default(autoincrement())
  price Float
  category Int
  name String
  time_created String
  time_sold String?
  location String /// @encrypted
  formatted_address String @default("No address available.") /// @encrypted
  description String?
  image_url String?
  condition String?
  brand String?
  color String?
  author   User @relation("UserCreatedPosts", fields: [authorId], references: [id])
  authorId Int
  buyer User? @relation("UserBoughtPosts", fields: [buyerId], references: [id])
  buyerId Int?
  User_UserLikedPosts User[] @relation("UserLikedPosts")
  User_UserSavedPosts User[] @relation("UserSavedPosts")
}
